apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: use-privileged-policy
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: "*"
rules:
  - apiGroups:
      - policy
    resources:
      - podsecuritypolicies
    resourceNames:
      - privileged
    verbs:
      - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: use-privileged-policy
roleRef:
  kind: ClusterRole
  name: use-default-policy
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: Group
    name: "system:serviceaccount:admission:default"
    apiGroup: rbac.authorization.k8s.io
  - kind: Group
    name: "system:serviceaccount:kube-system:default"
    apiGroup: rbac.authorization.k8s.io
  - kind: Group
    name: "system:serviceaccount:registry:default"
    apiGroup: rbac.authorization.k8s.io
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: privileged
spec:
  privileged: true
  allowPrivilegeEscalation: true
  allowedCapabilities:
    - "*"
  volumes:
    - "*"
  hostNetwork: true
  hostPorts:
    - min: 0
      max: 65535
  hostIPC: true
  hostPID: true
  runAsUser:
    rule: "RunAsAny"
  seLinux:
    rule: "RunAsAny"
  supplementalGroups:
    rule: "RunAsAny"
  fsGroup:
    rule: "RunAsAny"
